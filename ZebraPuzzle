# pip install python-constraint

from constraint import Problem, AllDifferentConstraint
problem = Problem()
houses = range(1, 6)
attributes = {
    "colors": ["red", "green", "ivory", "yellow", "blue"],
    "nationalities": ["Englishman", "Spaniard", "Ukrainian", "Norwegian", "Japanese"],
    "pets": ["dog", "snails", "fox", "horse", "zebra"],
    "drinks": ["coffee", "tea", "milk", "orange juice", "water"],
    "cigarettes": ["Old Gold", "Kools", "Chesterfields", "Lucky Strike", "Parliaments"]
}
for attr in attributes.values():
    problem.addVariables(attr, houses)
    problem.addConstraint(AllDifferentConstraint(), attr)
problem.addConstraint(lambda x, y: x == y, ["Englishman", "red"])
problem.addConstraint(lambda x, y: x == y, ["Spaniard", "dog"])
problem.addConstraint(lambda x, y: x == y, ["coffee", "green"])
problem.addConstraint(lambda x, y: x == y, ["Ukrainian", "tea"])
problem.addConstraint(lambda x, y: x == y + 1, ["green", "ivory"])
problem.addConstraint(lambda x, y: x == y, ["Old Gold", "snails"])
problem.addConstraint(lambda x, y: x == y, ["Kools", "yellow"])
problem.addConstraint(lambda x: x == 3, ["milk"])
problem.addConstraint(lambda x: x == 1, ["Norwegian"])
problem.addConstraint(lambda x, y: abs(x - y) == 1, ["Chesterfields", "fox"])
problem.addConstraint(lambda x, y: abs(x - y) == 1, ["Kools", "horse"])
problem.addConstraint(lambda x, y: x == y, ["Lucky Strike", "orange juice"])
problem.addConstraint(lambda x, y: x == y, ["Japanese", "Parliaments"])
problem.addConstraint(lambda x, y: abs(x - y) == 1, ["Norwegian", "blue"])
solution = problem.getSolutions()[0]
for house in houses:
    print(f"House {house}:", ", ".join(
        f"{attr[:-1].capitalize()}: {next(item for item, h in solution.items() if h == house and item in attributes[attr])}"
        for attr in attributes
    ))
zebra_owner = next(n for n in attributes["nationalities"] if solution[n] == solution["zebra"])
water_drinker = next(n for n in attributes["nationalities"] if solution[n] == solution["water"])
print(f"\nThe person who owns the zebra is the {zebra_owner}.")
print(f"The person who drinks water is the {water_drinker}.")
